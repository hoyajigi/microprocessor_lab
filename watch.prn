 FFFFFFFF           ;*******************************************************************                       
 FFE0           LCDWIR  EQU     0FFE0H   ; LCD IR 쓰기 
 FFE1           LCDWDR  EQU     0FFE1H ; LCD DR 쓰기 
 FFE2           LCDRIR  EQU     0FFE2H  ; LCD IR 읽기 
 FFE3           LCDRDR  EQU     0FFE3H ; LCD DR 읽기 
                
 FFF0           DATAOUT    EQU     0FFF0H ;데이터 아웃의 주소 
 FFF1           DATAIN     EQU     0FFF1H ;데이터 인의 주소  
 FFC1           DLED       EQU     0FFC1H ;오른쪽 2개  7_SEGMENT의 주소 
 FFC2           ALED0      EQU     0FFC2H ;중간 2개 7_SEGMENT의 주소 
 FFC3           ALED1      EQU     0FFC3H ;왼쪽 2개 7_SEGMENT의 주소 
                
 FFFFFFFF           ;DEFINE VARIABLE ;******************************************************************** 
 0020           INST  EQU     20H ; LCD INSTRUCTION 값 보관 
 0021           DATA  EQU     21H ; LCD DATA 값 보관 
 0022           LROW  EQU     22H  ; LCD 표시 좌표: 행의 값 보관   
 0023           LCOL  EQU     23H ; LCD 표시 좌표: 열의 값 보관 
 0024           NUMFONT  EQU     24H ; message 개수 보관  
 0025           FDPL  EQU     25H ; DPL 값 보관 
 0026           FDPH  EQU     26H ; DPH 값 보관 
                
 0030           VSEC       EQU     30H  ; 오른쪽 2개의 7_SEGMENT에 표시 될 값 보관 
 0031           VMIN       EQU     31H  ; 중간 2개의 7_SEGMENT에 표시 될 값 보관  
 0032           VHOUR      EQU     32H  ; 왼쪽 2개의 7_SEGMENT에 표시 될 값 보관 
 0033           VBUF       EQU     33H  ; 임시 보관 장소 
 0034           VX         EQU     34H
                
 0080           AHOUR EQU      80H
 FFFFFFFF           ;AMIN  EQU      81H
 FFFFFFFF           ;ASEC  EQU      82H
                
                
 0083           rand8reg EQU 83H		;one byte
                
 0090           VRANDOM1 EQU 90H
 0091           VOP      EQU 91H
 0092           VRANDOM2 EQU 92H
 0093           VRANDOM3 EQU 93H
                
 0093           VRANDOM EQU 93H
                
 FFFFFFFF           ; DEFINE LCD INSTRUCTION  ;******************************************************************** 
 0001           CLEAR  EQU     01H  ; CLEAR 명령  
 FFFFFFFF           ; Cursor home  
 0002           CUR_HOME  EQU     02H  ; CURSOR HOME 위치로 이동  
 FFFFFFFF           ; 커서의 진행 방향을 제어하고,표시의 이동을 제어 
 0006           ENTRY2      EQU     06H     ; 어드레스를 1 증가 시키고, 커서나 블링크를 우로 이동  
 FFFFFFFF           ; 표시부 ON/OFF 제어 
 000E           DCB6         EQU     0EH     ; 표시(ON) ,커서(ON) ,블링크(OFF)  
 FFFFFFFF           ; Function setting 
 0038           FUN5         EQU     38H    ; 8비트 2행 5*7  1/16 듀티  
 FFFFFFFF           ; DDRAM Address setting 
 0080           LINE_1        EQU     80H     ;1 000 0000 : LCD 1 번째 줄로 이동 
 00C0           LINE_2        EQU     0C0H    ;1 010 0000 : LCD 2 번째 줄로 이동  
                
                
                
 8000           ORG 8000H
                
                ;LCD initialization 
 8000 752038    LCD_INIT:    MOV      INST,#FUN5
 8003 1281E0                 CALL     INSTWR                                                     
 8006 75200E                 MOV      INST,#DCB6            
 8009 1281E0                 CALL    INSTWR 
 800C 752001                 MOV      INST,#CLEAR  
 800F 1281E0                 CALL     INSTWR  
 8012 752006                 MOV      INST,#ENTRY2 
 8015 1281E0                 CALL     INSTWR       
                
                
                
                
                
 8018 758901    MOV TMOD,#00000001B;GATE =0,TIMER MODE,RUN MODE 01
 801B 75A882    MOV IE,#10000010B;ENABLE ONLY TIMER 0
 801E 758C4C    MOV TH0,#4CH
 8021 758A00    MOV TL0,#00H
 8024 7414      MOV A #14H
 8026 75912A    MOV VOP, #2AH
 8029           ;JMP $
                
                
 8029 758160    MOV     SP,#60H    ; 스택 포인터의 위치를 이동  
 802C 753280    MOV     VHOUR,#80H ; VHOUR의 초기화            
 802F 753151    MOV     VMIN,#51H  ; VMIN의  초기화            
 8032 753000    MOV     VSEC,#00H  ; VSEC의  초기화            
 8035 128137    CALL    DISPLAY 
                
 8038 753406    MOV VX #06
 803B 128100    MAIN:      CALL    FINDKEYCODE   ; 키코드 값을 읽어오는 루틴 호출
 803E                      ;JB      ACC.4, ERR    ; 함수 키 이면, 에러 표시
 803E F533                 MOV     VBUF, A       ; 읽어온 키 코드 값을 VBUF에 보관
 8040 1280DD               CALL    SHIFT         ; 표시 이동 루틴 호출
 8043 128137               CALL    DISPLAY       ; 이동된 값을 표시
 8046 1280C6               CALL    BOUNCE        ; 바운스 현상을 없애기 위한 루틴 호출
 8049 D534EF               DJNZ    VX,MAIN          ; 반복 동작을 위한 분기 
 804C D28C      SETB TCON.TR0
 804E 128100    CALL    FINDKEYCODE   ; 키코드 값을 읽어오는 루틴 호출
 8051 F580      MOV     AHOUR, A       ; 읽어온 키 코드 값을 VBUF에 보관
                
 8053 80FE      JMP $
                
                
                
 8055           ;generates an 8 bit pseudo-random number which is returned in Acc.
 8055           ;one byte of memory must be available for rand8reg
                
 8055 F583      rand8:	MOV	rand8reg, A
 8057 7003      	jnz	rand8b
 8059 F4        	cpl	A
 805A E583      	MOV	A, rand8reg
                
 805C 54B8      rand8b:	anl	A, #10111000b
 805E 92D0      	mov	p, c
 8060 F583      	MOV	rand8reg, A
 8062 33        	rlc	A
 8063 E583      	MOV	A ,rand8reg
 8065 22        	ret
                
 8066           MAKERANDOMNUMBER:
 8066 1155      CALL rand8
 8068 E583      MOV A,rand8reg
 806A 75F00A    MOV B,#10
 806D 84        DIV AB
 806E F590      MOV VRANDOM1,A
 8070 E5F0      MOV A,B
 8072 F592      MOV VRANDOM2,A
 8074 8590F0    MOV B,VRANDOM1
 8077 A4        MUL AB
 8078 F593      MOV VRANDOM3,A
                
 807A E590      MOV A,VRANDOM1
 807C 2430      ADD A,#48
 807E F590      MOV VRANDOM1,A
 8080 E592      MOV A,VRANDOM2
 8082 2430      ADD A,#48
 8084 F592      MOV VRANDOM2,A
 8086 E593      MOV A,VRANDOM3
 8088 2430      ADD A,#48
 808A F593      MOV VRANDOM3,A
 808C 22        RET
                
 808D           ; Initial message 
 808D           LCD_MESG: 
 808D 1281FC    CALL STARTMOTOR
 8090 1166      CALL MAKERANDOMNUMBER
 8092 752201    MOV      LROW,#01H
 8095 752300             MOV      LCOL,#00H
 8098 1281C2             CALL     CUR_MOV
                
 809B 900090                 MOV      DPTR,#90H
 809E 858225                 MOV      FDPL,DPL
 80A1 858326                 MOV      FDPH,DPH
 80A4 752403                 MOV      NUMFONT,#03H
 80A7 1281AD                 CALL     DISFONT
                  
                
                
 80AA 128100    LCDKP:	   CALL    FINDKEYCODE   ; 키코드 값을 읽어오는 루틴 호출
 80AD                      ;CALL    SHIFT         ; 표시 이동 루틴 호출
 80AD B59304    	CJNE A,VRANDOM3,LCDJP
                
                           
 80B0 128201    LCDRP: CALL STOPMOTOR
 80B3 22                  RET                   ; 상위 루틴으로 복귀
                
 80B4 F534      LCDJP:  MOV VX,A
 80B6 E533      MOV A,VBUF
 80B8 75F00A    MOV B,#10
 80BB A4        MUL AB
 80BC 2534      ADD A,VX
 80BE 853433    	MOV     VBUF, VX       ; 읽어온 키 코드 값을 VBUF에 보관
 80C1 B593E6            CJNE A,VRANDOM3,LCDKP	
 80C4 80EA      SJMP LCDRP
                
 80C6                      ; 눌러진 키가 떨어질 때까지 일정 시간 지연 
 80C6 1280D4    BOUNCE:    CALL    DELAY         ; 시간 지연 루틴 호출    
 80C9 7400      RELOAD:    MOV     A,#0          ; 키가 떨어 졌는지 체크
 80CB 12812E                 CALL    SUBKEY
 80CE F4                           CPL     A
 80CF 70F8                  JNZ     RELOAD        ; 키가 떨어지지 않았으면, 다시 체크  
 80D1 1280D4               CALL    DELAY         ; 시간 지연 루틴 호출
                
                
 80D4           ;*************************************************** 
 80D4           ;*         서브 루틴 : DELAY                       * 
 80D4           ;*              입력 : 없음                        * 
 80D4           ;*              출력 : 없음                        * 
 80D4           ;*              기능 : R1*2+3 만큼의 시간 지연     * 
 80D4           ;*************************************************** 
 80D4 7820      DELAY:     MOV     R0,#020H  
 80D6 79FF      REPEAT:    MOV     R1,#0FFH 
 80D8 D9FE                 DJNZ    R1,$ 
 80DA D8FA                 DJNZ    R0,REPEAT 
 80DC 22                   RET                
                
 80DD           ;*************************************************** 
 80DD           ;*         서브 루틴 : SHIFT                       * 
 80DD           ;*              입력 : VBUF                        * 
 80DD           ;*              출력 : VSEC,VMIN,VHOUR             * 
 80DD           ;*              기능 : 표시된 값을 왼쪽으로 이동   * 
 80DD           ;*                     시키기                      *
 80DD           ;*************************************************** 
 80DD E532      SHIFT:     MOV     A,VHOUR 
 80DF C4                   SWAP    A 
 80E0 F532                 MOV     VHOUR,A           
 80E2 E531                 MOV     A,VMIN 
 80E4 C4                   SWAP    A   
 80E5 F531                 MOV     VMIN,A            
 80E7 E530                 MOV     A,VSEC 
 80E9 C4                   SWAP    A   
 80EA F530                 MOV     VSEC,A            
 80EC E531                 MOV     A,VMIN 
 80EE 7832                 MOV     R0,#VHOUR 
 80F0 D6                   XCHD    A,@R0          
 80F1 F531                 MOV     VMIN,A  
 80F3 E530                 MOV     A,VSEC 
 80F5 7831                 MOV     R0,#VMIN 
 80F7 D6                   XCHD    A,@R0       
 80F8 F530                 MOV     VSEC,A  
 80FA E533                 MOV     A,VBUF 
 80FC 7830                 MOV     R0,#VSEC    
 80FE D6                   XCHD    A,@R0        ; 새로 입력된 키 값으로 바꿈 
 80FF 22                   RET 
                
 8100           ;*************************************************** 
 8100           ;*         서브 루틴: FINDKEYCODE                  *  
 8100           ;*              입력: A                            * 
 8100           ;*              출력: A                            * 
 8100           ;*              기능: 키 코드값을  찾아내기        * 
 8100           ;*************************************************** 
 8100 C0D0      FINDKEYCODE: PUSH    PSW        ; 스택에 PSW값을 보관
 8102 D2D4                   SETB    PSW.4      ; 뱅크3 레지스터 사용
 8104 D2D3                   SETB    PSW.3  
 8106 7900      INITIAL:    MOV     R1,#00H      ; R1값을 초기화 
 8108 74EF                  MOV     A,#11101111B ; 데이터 아웃의 초기값 
 810A D3                   SETB    C               
 810B F8        COLSCAN:    MOV     R0,A         ; R0에 데이터 아웃 값 보관 
 810C 09                     INC     R1           ; R1 열의 값 보관
 810D 12812E                CALL    SUBKEY       ; 키 패드 입력 상태 조사  
 8110 B4FF07                CJNE    A,#0FFH,RSCAN ; 누산기의 값이 0FFH 가 아니면, 키 입력이 발생                               
 8113 E8                       MOV     A,R0 
 8114 D3                    SETB    C 
 8115 13                   RRC     A            ; 다음 열로 이동 
 8116 50EE                 JNC     INITIAL      ; 모든 열을 스캔했으면,다시 시작 
 8118 80F1                  JMP     COLSCAN      ; 다음 열의 스캔을 위한 분기  
 811A 7A00      RSCAN:      MOV     R2,#00H      ; R2 행의 값 보관 
 811C 13        ROWSCAN:    RRC     A            ; 어느 행이 1 로 바뀌었는지 조사
 811D 5003                  JNC     MATRIX       ; 캐리가 발생하면, MATRIX로 분기 
 811F 0A                    INC     R2           ; 캐리가 발생하지 않으면, 다음 행으로 이동 
 8120 80FA                 JMP     ROWSCAN      ; 다음 행의 스캔을 위한 분기 
                
 8122 EA        MATRIX:     MOV     A,R2         ; R2에는 행의 값 보존 
 8123 75F005                MOV     B,#05H       ; 1행은 5열로 이루어짐 
 8126 A4                   MUL     AB           ; 2차원 배열을 1차원 배열로 값을 바꿈 
 8127 29                    ADD     A,R1         ; R1에는 열의 값 보존 
 8128 129F0E                CALL    INDEX        ; 키 코드 값을 지정 
 812B D0D0                  POP     PSW          ; 스택으로 부터 PSW 값을 가지고 옴 
 812D 22                    RET                  ; 상위 루틴으로 복귀 
                
                
 812E           ;***************************************************************** 
 812E           ;*          서브 루틴 : SUBKEY                                   * 
 812E           ;*               입력 : ACC                                      * 
 812E           ;*               출력 : ACC                                      * 
 812E           ;*               기능 : 데이터 아웃으로 데이터를 내보내고        * 
 812E           ;*                      데이터 인으로 결과를 확인                *  
 812E           ;***************************************************************** 
 812E 90FFF0    SUBKEY:     MOV     DPTR,#DATAOUT 
 8131 F0                    MOVX    @DPTR,A 
 8132 90FFF1                MOV     DPTR,#DATAIN 
 8135 E0                    MOVX    A,@DPTR 
 8136 22                    RET 
                
 8137           ;***************************************************************** 
 8137           ;*          서브 루틴 : DISPLAY                                  * 
 8137           ;*               입력 : ACC                                      * 
 8137           ;*               출력 : ACC                                      * 
 8137           ;*               기능 : 키 코드값을 7_SEGMENT 로 표시            *
 8137           ;*****************************************************************  
 8137 90FFC1    DISPLAY:   MOV     DPTR,#DLED      ; 오른쪽 2개의 7_SEGMENT 지정 
 813A E530                  MOV     A,VSEC        ; VSEC 값을 누산기로 
 813C F0                    MOVX    @DPTR,A       ; VSEC 값의 표시  
 813D 90FFC2                MOV     DPTR,#ALED0   ; 중간 2개의 7_SEGMENT 지정 
 8140 E531                  MOV     A,VMIN        ; VMIN 값을 누산기로 
 8142 F0                    MOVX    @DPTR,A       ; VMIN 값의 표시
                
 8143 90FFC3    MOV      DPTR,#ALED1   ; 오른쪽 2개의 7_SEGMENT 지정 
 8146 E532                  MOV     A,VHOUR       ; VHOUR 값을 누산기로 
 8148 F0                    MOVX    @DPTR,A       ; VHOUR 값의 표시 
 8149 22                    RET                   ; 상위 루틴으로 복귀    
                
 814A           ;***************************************************************** 
 814A           ;*          서브 루틴 : INDEX                                    * 
 814A           ;*               입력 : ACC                                      * 
 814A           ;*               출력 : ACC                                      * 
 814A           ;*              기능 : 키 코드값을 정의                          *  
 814A           ;***************************************************************** 
 814A           ;DEFINE  FUNCTION KEY 
 0010           RWKEY       EQU     10H ;READ AND WRITE KEY 
 0011           INCKEY      EQU     11H ;INCRESE KEY(COMMA ,) 
 0012           ENDKEY      EQU     12H ;END KEY (PERIOD . ) 
 0013           GO          EQU     13H ;GO-KEY 
 0014           REG         EQU     14H ;REGISTER KEY 
 0015           DECKEY      EQU     15H ;DECRESE KEY 
 0016           CODE        EQU     16H ;CODE KEY 
 0017           ST          EQU     17H ;SINGLE STEP KEY 
 0018           RST         EQU     18H ;RST KEY   
                
                
 814A           ; 무한루프를 돌다가 Interrupt 발생 시 SERVICE 루틴으로 가게 된다.
 814A D28C      SERVICE: SETB TCON.TR0
 814C D5E055    DJNZ A SERVICE2
                
 814F 0530      INC VSEC
 8151 E530      MOV A,VSEC
 8153 C3        CLR C
 8154 C2D6      CLR AC
 8156 D4        DA A
 8157 C3        CLR C
 8158 C2D6      CLR AC
 815A F530      MOV VSEC,A
 815C B46029    CJNE A, #60H, RETIP
 815F 753000    MOV VSEC,#00
                
 8162 0531      INC VMIN
 8164 E531      MOV A,VMIN
 8166 C3        CLR C
 8167 C2D6      CLR AC
 8169 D4        DA A
 816A C3        CLR C
 816B C2D6      CLR AC
 816D F531      MOV VMIN,A
 816F B46016    CJNE A, #60H, RETIP
 8172 753100    MOV VMIN,#00
                
 8175 0532      INC VHOUR
 8177 E532      MOV A,VHOUR
 8179 C3        CLR C
 817A C2D6      CLR AC
 817C D4        DA A
 817D C3        CLR C
 817E C2D6      CLR AC
 8180 F532      MOV VHOUR,A
 8182 B42403    CJNE A, #24H, RETIP
 8185 753200    MOV VHOUR,#00
                
 8188           RETIP: 
 8188 E580      MOV A,AHOUR
 818A B5320A    CJNE A, VHOUR, RETIP2
 818D 7400      MOV A,#00H
 818F B53105    CJNE A, VMIN, RETIP2
 8192 B53002    CJNE A, VSEC, RETIP2
 8195 118D      CALL LCD_MESG
                
 8197           RETIP2:
 8197 3137      CALL DISPLAY
 8199 7414      MOV A #14H
 819B 758C3C    MOV TH0,#3CH
 819E 758AAF    MOV TL0,#0AFH
 81A1 D28C      SETB TCON.TR0
 81A3 32        RETI
                
                
 81A4           SERVICE2:
 81A4 758C3C    MOV TH0,#3CH
 81A7 758AAF    MOV TL0,#0AFH
 81AA D28C      SETB TCON.TR0
 81AC 32        RETI
                
                
                
 81AD           ;********************************************************* 
 81AD           ;*           서브 루틴: DISFONT                          * 
 81AD           ;*           입       력: 없음                           * 
 81AD           ;*           출       력: LCD        * 
 81AD           ;*           기       능: 글자 폰트를 읽어와 LCD에 표시          * 
 81AD           ;********************************************************* 
 81AD 7D00      DISFONT:     MOV      R5,#00H       
 81AF 852582    FLOOP:       MOV      DPL,FDPL
 81B2 852683                 MOV      DPH,FDPH 
 81B5 ED                     MOV      A,R5 
 81B6 93                     MOVC     A,@A+DPTR 
 81B7 F521                   MOV      DATA,A
 81B9 1281EA                 CALL     DATAWR 
 81BC 0D                     INC      R5 
 81BD ED                     MOV      A,R5 
 81BE B524EE                 CJNE     A,NUMFONT,FLOOP 
 81C1 22                     RET        
                
                
 81C2           ;********************************************************* 
 81C2           ;*       서브 루틴: 커서의 위치 제어(CUR_MOV)            * 
 81C2           ;*       입       력: 커서의 행과 열 < LROW(행) ,LCOL(열) >       * 
 81C2           ;*       출       력: LCD 화 면                                     *  
 81C2           ;*       기       능: 커서 위치 조정                               * 
 81C2           ;********************************************************* 
 81C2 E522      CUR_MOV:     MOV      A,LROW 
 81C4 B4010C                  CJNE     A,#01H, NEXT  
 81C7 7480                   MOV      A ,#LINE_1  
 81C9 2523                   ADD      A ,LCOL  
 81CB F520                   MOV      INST,A  
 81CD 1281E0                 CALL     INSTWR   
 81D0 0281DF                JMP      RET_POINT
 81D3 B40209    NEXT:        CJNE     A,#02H, RET_POINT
 81D6 74C0                     MOV      A ,#LINE_2
 81D8 2523                     ADD      A ,LCOL 
 81DA F520                    MOV      INST,A  
 81DC 1281E0                  CALL     INSTWR  
 81DF 22        RET_POINT:   RET 
                
                
                
 81E0           ;********************************************************* 
 81E0           ;*         서브 루틴: INSTWR                                     * 
 81E0           ;*         입       력: INST                                       * 
 81E0           ;*         출       력: LCD 화 면                                   * 
 81E0           ;*         기       능: LCD INSTRUCTION 레지스터 쓰기             * 
 81E0           ;********************************************************* 
 81E0 1281F4    INSTWR:      CALL      INSTRD
 81E3 90FFE0                   MOV       DPTR,#LCDWIR 
 81E6 E520                    MOV       A,INST 
 81E8 F0                      MOVX      @DPTR,A 
 81E9 22                       RET 
 81EA           ;********************************************************* 
 81EA           ;*          서브 루틴: DATAW                             * 
 81EA           ;*          입       력: DATA                            *  
 81EA           ;*          출       력: LCD 화 면                       * 
 81EA           ;*          기       능: LCD DATA 레지스터 쓰기          * 
 81EA           ;********************************************************* 
 81EA 1281F4    DATAWR:      CALL      INSTRD 
 81ED 90FFE1                  MOV       DPTR,#LCDWDR
 81F0 E521                     MOV       A,DATA
 81F2 F0                       MOVX      @DPTR,A
 81F3 22                       RET 
                
                
 81F4           ;********************************************************* 
 81F4           ;*          서브 루틴: INSTRD                                     *  
 81F4           ;*          입       력: 없음                                       * 
 81F4           ;*          출       력: BUSY                                       * 
 81F4           ;*          기       능: 비지 플래그/어드레스 읽기                 * 
 81F4           ;********************************************************* 
 81F4 90FFE2    INSTRD:      MOV       DPTR,#LCDRIR
 81F7 E0                     MOVX      A,@DPTR 
 81F8 20E7F9                 JB        ACC.7,INSTRD 
 81FB 22                     RET                 
                
                
                
 81FC           ; 모터 정 회전 
 81FC 7406      STARTMOTOR: MOV     A,#00000110B   
 81FE 128206                CALL     MOTOR  
 8201           ; 모터 회전 정지                              
 8201 7400      STOPMOTOR: MOV    A,#00000000B   
 8203 128206               CALL     MOTOR             
                
 8206 90FFEF    MOTOR:     MOV     DPTR,#0FFEFH
 8209 F0                   MOVX    @DPTR,A
 820A 22                   RET 
                
                
                
                
 9F0B           ORG 9F0BH
 9F0B 02814A    JMP SERVICE
                
                
 9F0E 83        INDEX:      MOVC    A,@A+PC ;누산기는 1 ~ 24의 값을 가진다. 
 9F0F 22                    RET 
 9F10 17        KEYBASE:    DB ST             ;SW1,ST                   1
 9F11 16                    DB CODE           ;SW6,CODE                 2
 9F12 15                     DB DECKEY         ;SW11,CD                 3 
 9F13 14                    DB REG            ;SW15,REG                 4
 9F14 13                    DB GO             ;SW19,GO                  5 
 9F15 0C                    DB 0CH            ;SW2,C                    6 
 9F16 0D                    DB 0DH            ;SW7,D                    7 
 9F17 0E                    DB 0EH            ;SW12,E                   8 
 9F18 0F                    DB 0FH           ;SW16,F                   9  
 9F19 11                   DB INCKEY         ;SW20,COMMA (,)          10  
 9F1A 08                   DB 08H            ;SW3,8                    11 
 9F1B 09                    DB 09H            ;SW8,9                    12 
 9F1C 0A                   DB 0AH            ;SW13,A                  13   
 9F1D 0B                  DB 0BH            ;SW17,B                  14    
 9F1E 12                 DB ENDKEY         ;SW21,PERIOD(.)          15    
 9F1F 04                 DB 04H           ;SW4,4                    16    
 9F20 05                 DB 05H            ;SW9,5                    17  
 9F21 06                   DB 06H            ;SW14,6                  18
 9F22 07                     DB 07H            ;SW18,7                  19
 9F23 10                     DB RWKEY          ;SW22,R/W                20 
 9F24 00                    DB 00H            ;SW5,0                    21 
 9F25 01                    DB 01H            ;SW10,1                  22  
 9F26 02                   DB 02H            ;SW24,2                  23 
 9F27 03                    DB 03H            ;SW23,3                  24 
 9F28                      ;DB RST            ;SW24  RST KEY           25                      
 9F28           END 


 PUSAN NATIONAL UNIVERSITY  8051 CROSS-ASSEMBLER        VERSION 1.20

                          Multiware & Image

 SOURCE FILE NAME: C:\USERS\HYUNSEOK\DOCUMENTS\GITHUB\MICROPROCESSOR_LAB\WATCH.ASM



