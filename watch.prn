 FFFFFFFF           ;*******************************************************************                       
 FFE0           LCDWIR  EQU     0FFE0H   ; LCD IR 쓰기 
 FFE1           LCDWDR  EQU     0FFE1H ; LCD DR 쓰기 
 FFE2           LCDRIR  EQU     0FFE2H  ; LCD IR 읽기 
 FFE3           LCDRDR  EQU     0FFE3H ; LCD DR 읽기 
                
 FFF0           DATAOUT    EQU     0FFF0H ;데이터 아웃의 주소 
 FFF1           DATAIN     EQU     0FFF1H ;데이터 인의 주소  
 FFC1           DLED       EQU     0FFC1H ;오른쪽 2개  7_SEGMENT의 주소 
 FFC2           ALED0      EQU     0FFC2H ;중간 2개 7_SEGMENT의 주소 
 FFC3           ALED1      EQU     0FFC3H ;왼쪽 2개 7_SEGMENT의 주소 
                
 FFFFFFFF           ;DEFINE VARIABLE ;******************************************************************** 
 0020           INST  EQU     20H ; LCD INSTRUCTION 값 보관 
 0021           DATA  EQU     21H ; LCD DATA 값 보관 
 0022           LROW  EQU     22H  ; LCD 표시 좌표: 행의 값 보관   
 0023           LCOL  EQU     23H ; LCD 표시 좌표: 열의 값 보관 
 0024           NUMFONT  EQU     24H ; message 개수 보관  
 0025           FDPL  EQU     25H ; DPL 값 보관 
 0026           FDPH  EQU     26H ; DPH 값 보관 
                
 0030           VSEC       EQU     30H  ; 오른쪽 2개의 7_SEGMENT에 표시 될 값 보관 
 0031           VMIN       EQU     31H  ; 중간 2개의 7_SEGMENT에 표시 될 값 보관  
 0032           VHOUR      EQU     32H  ; 왼쪽 2개의 7_SEGMENT에 표시 될 값 보관 
 0033           VBUF       EQU     33H  ; 임시 보관 장소 
 0034           VX         EQU     34H
 FFFFFFFF           ;HOUR EQU      80H
 FFFFFFFF           ;MIN  EQU      81H
 FFFFFFFF           ;SEC  EQU      82H
                
 FFFFFFFF           ;상수 정의  
 0005           REP_COUNT EQU     5 
                
                
 FFFFFFFF           ; DEFINE LCD INSTRUCTION  ;******************************************************************** 
 0001           CLEAR  EQU     01H  ; CLEAR 명령  
 FFFFFFFF           ; Cursor home  
 0002           CUR_HOME  EQU     02H  ; CURSOR HOME 위치로 이동  
 FFFFFFFF           ; 커서의 진행 방향을 제어하고,표시의 이동을 제어 
 0006           ENTRY2      EQU     06H     ; 어드레스를 1 증가 시키고, 커서나 블링크를 우로 이동  
 FFFFFFFF           ; 표시부 ON/OFF 제어 
 000E           DCB6         EQU     0EH     ; 표시(ON) ,커서(ON) ,블링크(OFF)  
 FFFFFFFF           ; Function setting 
 0038           FUN5         EQU     38H    ; 8비트 2행 5*7  1/16 듀티  
 FFFFFFFF           ; DDRAM Address setting 
 0080           LINE_1        EQU     80H     ;1 000 0000 : LCD 1 번째 줄로 이동 
 00C0           LINE_2        EQU     0C0H    ;1 010 0000 : LCD 2 번째 줄로 이동  
                
                
                
 8000           ORG 8000H
                
                ;LCD initialization 
 8000 752038    LCD_INIT:    MOV      INST,#FUN5
 8003 1281B9                 CALL     INSTWR                                                     
 8006 75200E                 MOV      INST,#DCB6            
 8009 1281B9                 CALL    INSTWR 
 800C 752001                 MOV      INST,#CLEAR  
 800F 1281B9                 CALL     INSTWR  
 8012 752006                 MOV      INST,#ENTRY2 
 8015 1281B9                 CALL     INSTWR       
                
 8018           ; Initial message 
 8018 752201    LCD_MESG:    MOV      LROW,#01H
 801B 752302                 MOV      LCOL,#02H
 801E 12819B                 CALL     CUR_MOV
 8021 9081D5                 MOV      DPTR,#MESSAGE1
 8024 858225                 MOV      FDPL,DPL
 8027 858326                 MOV      FDPH,DPH
 802A 75240E                 MOV      NUMFONT,#0EH
 802D 128186                 CALL     DISFONT
 8030 752202                 MOV      LROW,#02H
 8033 752302                 MOV      LCOL,#02H
 8036 12819B                 CALL     CUR_MOV
 8039 9081E3                 MOV      DPTR,#MESSAGE2
 803C 858225                 MOV      FDPL,DPL
 803F 858326                 MOV      FDPH,DPH
 8042 75240E                 MOV      NUMFONT,#0EH
 8045 128186                 CALL     DISFONT               
 8048           ;JMP      $ 
                
 8048 758901    MOV TMOD,#00000001B
 804B           ;GATE =0,TIMER MODE,RUN MODE 01
 804B 75A882    MOV IE,#10000010B
 804E           ;ENABLE ONLY TIMER 0
 804E 758C4C    MOV TH0,#4CH
 8051 758A00    MOV TL0,#00H
 8054 7414      MOV A #14H
 8056           ;JMP $
                
                
 8056 758160    MOV     SP,#60H    ; 스택 포인터의 위치를 이동  
 8059 753280    MOV     VHOUR,#80H ; VHOUR의 초기화            
 805C 753151    MOV     VMIN,#51H  ; VMIN의  초기화            
 805F 753000    MOV     VSEC,#00H  ; VSEC의  초기화            
 8062 12811F    CALL    DISPLAY 
                
 8065 753406    MOV VX #06
 8068 1280E8    MAIN:      CALL    FINDKEYCODE   ; 키코드 값을 읽어오는 루틴 호출
 806B                      ;JB      ACC.4, ERR    ; 함수 키 이면, 에러 표시
 806B F533                 MOV     VBUF, A       ; 읽어온 키 코드 값을 VBUF에 보관
 806D 1280C5               CALL    SHIFT         ; 표시 이동 루틴 호출
 8070 12811F               CALL    DISPLAY       ; 이동된 값을 표시
 8073 128082               CALL    BOUNCE        ; 바운스 현상을 없애기 위한 루틴 호출
 8076 D534EF               DJNZ    VX,MAIN          ; 반복 동작을 위한 분기 
 8079 D28C      SETB TCON.TR0
 807B 80FE      JMP $
                
 807D 128091    ERR:       CALL    ERROR         ; 에러 표시 루틴 호출
 8080 80E6                   JMP     MAIN          ; 메인 루틴으로 복귀
                  
 8082                      ; 눌러진 키가 떨어질 때까지 일정 시간 지연 
 8082 1280BC    BOUNCE:    CALL    DELAY         ; 시간 지연 루틴 호출    
 8085 7400      RELOAD:    MOV     A,#0          ; 키가 떨어 졌는지 체크
 8087 128116                 CALL    SUBKEY
 808A F4                           CPL     A
 808B 70F8                  JNZ     RELOAD        ; 키가 떨어지지 않았으면, 다시 체크  
 808D 1280BC               CALL    DELAY         ; 시간 지연 루틴 호출
 8090 22                   RET                   ; 상위 루틴으로 복귀
                
 8091           ;**************************************************** 
 8091           ;*        서브 루틴 : ERROR                         * 
 8091           ;*             입력 : 없음                          * 
 8091           ;*             출력 : 7_SEGMENT                     * 
 8091           ;*             기능 : REP_COUNT 에 지정된 횟수만큼  * 
 8091           ;*                    끄고 켜기를 반복              * 
 8091           ;**************************************************** 
 8091 7C05      ERROR:     MOV     R4,#REP_COUNT  
 8093 753000    ERR_1:     MOV     VSEC,#0 
 8096 753100               MOV     VMIN,#0
 8099 753200               MOV     VHOUR,#0
 809C 12811F               CALL    DISPLAY       ; 6개의 7_SEGMENT 켜기
 809F 7B0A                 MOV     R3,#10
 80A1 1280BC    FIRST:    CALL    DELAY 
 80A4 DBFB                 DJNZ    R3,FIRST      ; 일정 시간 지연  
 80A6 7530FF               MOV     VSEC , #0FFH 
 80A9 7531FF               MOV     VMIN , #0FFH 
 80AC 7532FF               MOV     VHOUR, #0FFH 
 80AF 12811F               CALL    DISPLAY       ; 6개의 7_SEGMENT 켜기   
 80B2 7B0A                 MOV     R3,#10       
 80B4 1280BC    SECOND:    CALL    DELAY 
 80B7 DBFB                 DJNZ    R3,SECOND     ; 일정 시간 지연  
 80B9 DCD8                 DJNZ    R4,ERR_1      ; 반복 횟수 만큼 반복 했는지 체크 
 80BB 22                   RET                   ; 상위 루틴으로 복귀 
                
 80BC           ;*************************************************** 
 80BC           ;*         서브 루틴 : DELAY                       * 
 80BC           ;*              입력 : 없음                        * 
 80BC           ;*              출력 : 없음                        * 
 80BC           ;*              기능 : R1*2+3 만큼의 시간 지연     * 
 80BC           ;*************************************************** 
 80BC 7820      DELAY:     MOV     R0,#020H  
 80BE 79FF      REPEAT:    MOV     R1,#0FFH 
 80C0 D9FE                 DJNZ    R1,$ 
 80C2 D8FA                 DJNZ    R0,REPEAT 
 80C4 22                   RET                
                
 80C5           ;*************************************************** 
 80C5           ;*         서브 루틴 : SHIFT                       * 
 80C5           ;*              입력 : VBUF                        * 
 80C5           ;*              출력 : VSEC,VMIN,VHOUR             * 
 80C5           ;*              기능 : 표시된 값을 왼쪽으로 이동   * 
 80C5           ;*                     시키기                      *
 80C5           ;*************************************************** 
 80C5 E532      SHIFT:     MOV     A,VHOUR 
 80C7 C4                   SWAP    A 
 80C8 F532                 MOV     VHOUR,A           
 80CA E531                 MOV     A,VMIN 
 80CC C4                   SWAP    A   
 80CD F531                 MOV     VMIN,A            
 80CF E530                 MOV     A,VSEC 
 80D1 C4                   SWAP    A   
 80D2 F530                 MOV     VSEC,A            
 80D4 E531                 MOV     A,VMIN 
 80D6 7832                 MOV     R0,#VHOUR 
 80D8 D6                   XCHD    A,@R0          
 80D9 F531                 MOV     VMIN,A  
 80DB E530                 MOV     A,VSEC 
 80DD 7831                 MOV     R0,#VMIN 
 80DF D6                   XCHD    A,@R0       
 80E0 F530                 MOV     VSEC,A  
 80E2 E533                 MOV     A,VBUF 
 80E4 7830                 MOV     R0,#VSEC    
 80E6 D6                   XCHD    A,@R0        ; 새로 입력된 키 값으로 바꿈 
 80E7 22                   RET 
                
 80E8           ;*************************************************** 
 80E8           ;*         서브 루틴: FINDKEYCODE                  *  
 80E8           ;*              입력: A                            * 
 80E8           ;*              출력: A                            * 
 80E8           ;*              기능: 키 코드값을  찾아내기        * 
 80E8           ;*************************************************** 
 80E8 C0D0      FINDKEYCODE: PUSH    PSW        ; 스택에 PSW값을 보관
 80EA D2D4                   SETB    PSW.4      ; 뱅크3 레지스터 사용
 80EC D2D3                   SETB    PSW.3  
 80EE 7900      INITIAL:    MOV     R1,#00H      ; R1값을 초기화 
 80F0 74EF                  MOV     A,#11101111B ; 데이터 아웃의 초기값 
 80F2 D3                   SETB    C               
 80F3 F8        COLSCAN:    MOV     R0,A         ; R0에 데이터 아웃 값 보관 
 80F4 09                     INC     R1           ; R1 열의 값 보관
 80F5 128116                CALL    SUBKEY       ; 키 패드 입력 상태 조사  
 80F8 B4FF07                CJNE    A,#0FFH,RSCAN ; 누산기의 값이 0FFH 가 아니면, 키 입력이 발생                               
 80FB E8                       MOV     A,R0 
 80FC D3                    SETB    C 
 80FD 13                   RRC     A            ; 다음 열로 이동 
 80FE 50EE                 JNC     INITIAL      ; 모든 열을 스캔했으면,다시 시작 
 8100 80F1                  JMP     COLSCAN      ; 다음 열의 스캔을 위한 분기  
 8102 7A00      RSCAN:      MOV     R2,#00H      ; R2 행의 값 보관 
 8104 13        ROWSCAN:    RRC     A            ; 어느 행이 1 로 바뀌었는지 조사
 8105 5003                  JNC     MATRIX       ; 캐리가 발생하면, MATRIX로 분기 
 8107 0A                    INC     R2           ; 캐리가 발생하지 않으면, 다음 행으로 이동 
 8108 80FA                 JMP     ROWSCAN      ; 다음 행의 스캔을 위한 분기 
                
 810A EA        MATRIX:     MOV     A,R2         ; R2에는 행의 값 보존 
 810B 75F005                MOV     B,#05H       ; 1행은 5열로 이루어짐 
 810E A4                   MUL     AB           ; 2차원 배열을 1차원 배열로 값을 바꿈 
 810F 29                    ADD     A,R1         ; R1에는 열의 값 보존 
 8110 129F0E                CALL    INDEX        ; 키 코드 값을 지정 
 8113 D0D0                  POP     PSW          ; 스택으로 부터 PSW 값을 가지고 옴 
 8115 22                    RET                  ; 상위 루틴으로 복귀 
                
                
 8116           ;***************************************************************** 
 8116           ;*          서브 루틴 : SUBKEY                                   * 
 8116           ;*               입력 : ACC                                      * 
 8116           ;*               출력 : ACC                                      * 
 8116           ;*               기능 : 데이터 아웃으로 데이터를 내보내고        * 
 8116           ;*                      데이터 인으로 결과를 확인                *  
 8116           ;***************************************************************** 
 8116 90FFF0    SUBKEY:     MOV     DPTR,#DATAOUT 
 8119 F0                    MOVX    @DPTR,A 
 811A 90FFF1                MOV     DPTR,#DATAIN 
 811D E0                    MOVX    A,@DPTR 
 811E 22                    RET 
 811F           ;***************************************************************** 
 811F           ;*          서브 루틴 : DISPLAY                                  * 
 811F           ;*               입력 : ACC                                      * 
 811F           ;*               출력 : ACC                                      * 
 811F           ;*               기능 : 키 코드값을 7_SEGMENT 로 표시            *
 811F           ;*****************************************************************  
 811F 90FFC1    DISPLAY:   MOV     DPTR,#DLED      ; 오른쪽 2개의 7_SEGMENT 지정 
 8122 E530                  MOV     A,VSEC        ; VSEC 값을 누산기로 
 8124 F0                    MOVX    @DPTR,A       ; VSEC 값의 표시  
 8125 90FFC2                MOV     DPTR,#ALED0   ; 중간 2개의 7_SEGMENT 지정 
 8128 E531                  MOV     A,VMIN        ; VMIN 값을 누산기로 
 812A F0                    MOVX    @DPTR,A       ; VMIN 값의 표시
                
 812B 90FFC3    MOV      DPTR,#ALED1   ; 오른쪽 2개의 7_SEGMENT 지정 
 812E E532                  MOV     A,VHOUR       ; VHOUR 값을 누산기로 
 8130 F0                    MOVX    @DPTR,A       ; VHOUR 값의 표시 
 8131 22                    RET                   ; 상위 루틴으로 복귀    
                
 8132           ;***************************************************************** 
 8132           ;*          서브 루틴 : INDEX                                    * 
 8132           ;*               입력 : ACC                                      * 
 8132           ;*               출력 : ACC                                      * 
 8132           ;*              기능 : 키 코드값을 정의                          *  
 8132           ;***************************************************************** 
 8132           ;DEFINE  FUNCTION KEY 
 0010           RWKEY       EQU     10H ;READ AND WRITE KEY 
 0011           INCKEY      EQU     11H ;INCRESE KEY(COMMA ,) 
 0012           ENDKEY      EQU     12H ;END KEY (PERIOD . ) 
 0013           GO          EQU     13H ;GO-KEY 
 0014           REG         EQU     14H ;REGISTER KEY 
 0015           DECKEY      EQU     15H ;DECRESE KEY 
 0016           CODE        EQU     16H ;CODE KEY 
 0017           ST          EQU     17H ;SINGLE STEP KEY 
 0018           RST         EQU     18H ;RST KEY   
                
                
 8132           ; 무한루프를 돌다가 Interrupt 발생 시 SERVICE 루틴으로 가게 된다.
 8132 C28C      SERVICE: CLR TCON.TR0
 8134 D5E046    DJNZ A SERVICE2
                
 8137 0530      INC VSEC
 8139 E530      MOV A,VSEC
 813B C3        CLR C
 813C C2D6      CLR AC
 813E D4        DA A
 813F C3        CLR C
 8140 C2D6      CLR AC
 8142 F530      MOV VSEC,A
 8144 B46029    CJNE A, #60H, RETIP
 8147 753000    MOV VSEC,#00
                
 814A 0531      INC VMIN
 814C E531      MOV A,VMIN
 814E C3        CLR C
 814F C2D6      CLR AC
 8151 D4        DA A
 8152 C3        CLR C
 8153 C2D6      CLR AC
 8155 F531      MOV VMIN,A
 8157 B46016    CJNE A, #60H, RETIP
 815A 753100    MOV VMIN,#00
                
 815D 0532      INC VHOUR
 815F E532      MOV A,VHOUR
 8161 C3        CLR C
 8162 C2D6      CLR AC
 8164 D4        DA A
 8165 C3        CLR C
 8166 C2D6      CLR AC
 8168 F532      MOV VHOUR,A
 816A B42403    CJNE A, #24H, RETIP
 816D 753200    MOV VHOUR,#00
                
 8170 311F      RETIP: CALL DISPLAY
 8172 7414      MOV A #14H
 8174 758C3C    MOV TH0,#3CH
 8177 758AAF    MOV TL0,#0AFH
 817A D28C      SETB TCON.TR0
 817C 32        RETI
                
                
 817D           SERVICE2:
 817D 758C3C    MOV TH0,#3CH
 8180 758AAF    MOV TL0,#0AFH
 8183 D28C      SETB TCON.TR0
 8185 32        RETI
                
                
                
 8186           ;********************************************************* 
 8186           ;*           서브 루틴: DISFONT                                 * 
 8186           ;*           입       력: 없음                                         * 
 8186           ;*           출       력: LCD        * 
 8186           ;*           기       능: 글자 폰트를 읽어와 LCD에 표시          * 
 8186           ;********************************************************* 
 8186 7D00      DISFONT:     MOV      R5,#00H       
 8188 852582    FLOOP:       MOV      DPL,FDPL
 818B 852683                 MOV      DPH,FDPH 
 818E ED                     MOV      A,R5 
 818F 93                     MOVC     A,@A+DPTR 
 8190 F521                   MOV      DATA,A  
 8192 1281C3                 CALL     DATAWR 
 8195 0D                     INC      R5 
 8196 ED                     MOV      A,R5 
 8197 B524EE                 CJNE     A,NUMFONT,FLOOP 
 819A 22                     RET        
                
                
 819B           ;********************************************************* 
 819B           ;*       서브 루틴: 커서의 위치 제어(CUR_MOV)                   * 
 819B           ;*       입       력: 커서의 행과 열 < LROW(행) ,LCOL(열) >       * 
 819B           ;*       출       력: LCD 화 면                                     *  
 819B           ;*       기       능: 커서 위치 조정                               * 
 819B           ;********************************************************* 
 819B E522      CUR_MOV:     MOV      A,LROW 
 819D B4010C                  CJNE     A,#01H, NEXT  
 81A0 7480                   MOV      A ,#LINE_1  
 81A2 2523                   ADD      A ,LCOL  
 81A4 F520                   MOV      INST,A  
 81A6 1281B9                 CALL     INSTWR   
 81A9 0281B8                JMP      RET_POINT
 81AC B40209    NEXT:        CJNE     A,#02H, RET_POINT
 81AF 74C0                     MOV      A ,#LINE_2
 81B1 2523                     ADD      A ,LCOL 
 81B3 F520                    MOV      INST,A  
 81B5 1281B9                  CALL     INSTWR  
 81B8 22        RET_POINT:   RET 
                
                
                
 81B9           ;********************************************************* 
 81B9           ;*         서브 루틴: INSTWR                                     * 
 81B9           ;*         입       력: INST                                       * 
 81B9           ;*         출       력: LCD 화 면                                   * 
 81B9           ;*         기       능: LCD INSTRUCTION 레지스터 쓰기             * 
 81B9           ;********************************************************* 
 81B9 1281CD    INSTWR:      CALL      INSTRD
 81BC 90FFE0                   MOV       DPTR,#LCDWIR 
 81BF E520                    MOV       A,INST 
 81C1 F0                      MOVX      @DPTR,A 
 81C2 22                       RET 
 81C3           ;********************************************************* 
 81C3           ;*          서브 루틴: DATAW                             * 
 81C3           ;*          입       력: DATA                            *  
 81C3           ;*          출       력: LCD 화 면                       * 
 81C3           ;*          기       능: LCD DATA 레지스터 쓰기          * 
 81C3           ;********************************************************* 
 81C3 1281CD    DATAWR:      CALL      INSTRD 
 81C6 90FFE1                  MOV       DPTR,#LCDWDR
 81C9 E521                     MOV       A,DATA
 81CB F0                       MOVX      @DPTR,A
 81CC 22                       RET 
                
                
 81CD           ;********************************************************* 
 81CD           ;*          서브 루틴: INSTRD                                     *  
 81CD           ;*          입       력: 없음                                       * 
 81CD           ;*          출       력: BUSY                                       * 
 81CD           ;*          기       능: 비지 플래그/어드레스 읽기                 * 
 81CD           ;********************************************************* 
 81CD 90FFE2    INSTRD:      MOV       DPTR,#LCDRIR
 81D0 E0                       MOVX      A,@DPTR 
 81D1 20E7F9                  JB        ACC.7,INSTRD 
 81D4 22                       RET                 
 81D5           ;********************************************************* 
 81D5           ;*         DEFINE  MESSAGE                               * 
 81D5           ;********************************************************* 
 81D5 444F2059  MESSAGE1:    DB  'D','O',' ','Y','O' 
 81DA 55522042                DB  'U','R',' ','B','E' 
 81DF 53542021                DB  'S','T',' ','!' 
 81E3 594F5520  MESSAGE2:    DB  'Y','O','U',' ','C'
 81E8 414E2044                 DB  'A','N',' ','D','O' 
 81ED 20495421                DB  ' ','I','T','!'              
                
                
                
                
 9F0B           ORG 9F0BH
 9F0B 028132    JMP SERVICE
                
                
 9F0E 83        INDEX:      MOVC    A,@A+PC ;누산기는 1 ~ 24의 값을 가진다. 
 9F0F 22                    RET 
 9F10 17        KEYBASE:    DB ST             ;SW1,ST                   1
 9F11 16                    DB CODE           ;SW6,CODE                 2
 9F12 15                     DB DECKEY         ;SW11,CD                 3 
 9F13 14                    DB REG            ;SW15,REG                 4
 9F14 13                    DB GO             ;SW19,GO                  5 
 9F15 0C                    DB 0CH            ;SW2,C                    6 
 9F16 0D                    DB 0DH            ;SW7,D                    7 
 9F17 0E                    DB 0EH            ;SW12,E                   8 
 9F18 0F                    DB 0FH           ;SW16,F                   9  
 9F19 11                   DB INCKEY         ;SW20,COMMA (,)          10  
 9F1A 08                   DB 08H            ;SW3,8                    11 
 9F1B 09                    DB 09H            ;SW8,9                    12 
 9F1C 0A                   DB 0AH            ;SW13,A                  13   
 9F1D 0B                  DB 0BH            ;SW17,B                  14    
 9F1E 12                 DB ENDKEY         ;SW21,PERIOD(.)          15    
 9F1F 04                 DB 04H           ;SW4,4                    16    
 9F20 05                 DB 05H            ;SW9,5                    17  
 9F21 06                   DB 06H            ;SW14,6                  18
 9F22 07                     DB 07H            ;SW18,7                  19
 9F23 10                     DB RWKEY          ;SW22,R/W                20 
 9F24 00                    DB 00H            ;SW5,0                    21 
 9F25 01                    DB 01H            ;SW10,1                  22  
 9F26 02                   DB 02H            ;SW24,2                  23 
 9F27 03                    DB 03H            ;SW23,3                  24 
 9F28                      ;DB RST            ;SW24  RST KEY           25                      
 9F28           END 


 PUSAN NATIONAL UNIVERSITY  8051 CROSS-ASSEMBLER        VERSION 1.20

                          Multiware & Image

 SOURCE FILE NAME: C:\USERS\FTC_SIL_PC02\DOCUMENTS\GITHUB\MICROPROCESSOR_LAB\WATCH.ASM



